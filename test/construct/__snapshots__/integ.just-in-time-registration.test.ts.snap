// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CaRegisterApi integration test 1`] = `
Object {
  "Outputs": Object {
    "CaRegisterApitestcaseEndpointEF186608": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "CaRegisterApitestcaseFF571B6E",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "CaRegisterApitestcaseDeploymentStageprodDE10CF92",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "AssetParameters1aea2b843e6ed43ffc24a54a2cad2c3b6bbe1cd2fe75202bfd59c58305910536ArtifactHash7F1F7260": Object {
      "Description": "Artifact hash for asset \\"1aea2b843e6ed43ffc24a54a2cad2c3b6bbe1cd2fe75202bfd59c58305910536\\"",
      "Type": "String",
    },
    "AssetParameters1aea2b843e6ed43ffc24a54a2cad2c3b6bbe1cd2fe75202bfd59c58305910536S3Bucket061E763D": Object {
      "Description": "S3 bucket for asset \\"1aea2b843e6ed43ffc24a54a2cad2c3b6bbe1cd2fe75202bfd59c58305910536\\"",
      "Type": "String",
    },
    "AssetParameters1aea2b843e6ed43ffc24a54a2cad2c3b6bbe1cd2fe75202bfd59c58305910536S3VersionKey226D0F2E": Object {
      "Description": "S3 key for asset version \\"1aea2b843e6ed43ffc24a54a2cad2c3b6bbe1cd2fe75202bfd59c58305910536\\"",
      "Type": "String",
    },
    "AssetParametersab11131463735378dbf691c33f3f11750e5fb948ca02664e0c840573f212d269ArtifactHash93532F53": Object {
      "Description": "Artifact hash for asset \\"ab11131463735378dbf691c33f3f11750e5fb948ca02664e0c840573f212d269\\"",
      "Type": "String",
    },
    "AssetParametersab11131463735378dbf691c33f3f11750e5fb948ca02664e0c840573f212d269S3BucketE2E3F97F": Object {
      "Description": "S3 bucket for asset \\"ab11131463735378dbf691c33f3f11750e5fb948ca02664e0c840573f212d269\\"",
      "Type": "String",
    },
    "AssetParametersab11131463735378dbf691c33f3f11750e5fb948ca02664e0c840573f212d269S3VersionKeyB0154275": Object {
      "Description": "S3 key for asset version \\"ab11131463735378dbf691c33f3f11750e5fb948ca02664e0c840573f212d269\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "CaRegisterApitestcaseAccount8E47E814": Object {
      "DependsOn": Array [
        "CaRegisterApitestcaseFF571B6E",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "CaRegisterApitestcaseCloudWatchRoleCA9AE705",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "CaRegisterApitestcaseCaRegistrationRoletestcaseDDDC7E56": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "RoleName": "CaRegistrationRoleName-test-case",
      },
      "Type": "AWS::IAM::Role",
    },
    "CaRegisterApitestcaseCaRegistrationRoletestcaseDefaultPolicy8F06888E": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "iam:PassRole",
                "iam:CreateRole",
                "iam:AttachRolePolicy",
                "iot:RegisterCACertificate",
                "iot:TagResource",
                "iot:GetRegistrationCode",
                "iot:CreateTopicRule",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CaRegisterApitestcaseCaRegistrationRoletestcaseDefaultPolicy8F06888E",
        "Roles": Array [
          Object {
            "Ref": "CaRegisterApitestcaseCaRegistrationRoletestcaseDDDC7E56",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CaRegisterApitestcaseCaRegistratorFunctiontestcaseB58B98CE": Object {
      "DependsOn": Array [
        "CaRegisterApitestcaseCaRegistrationRoletestcaseDefaultPolicy8F06888E",
        "CaRegisterApitestcaseCaRegistrationRoletestcaseDDDC7E56",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersab11131463735378dbf691c33f3f11750e5fb948ca02664e0c840573f212d269S3BucketE2E3F97F",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersab11131463735378dbf691c33f3f11750e5fb948ca02664e0c840573f212d269S3VersionKeyB0154275",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersab11131463735378dbf691c33f3f11750e5fb948ca02664e0c840573f212d269S3VersionKeyB0154275",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "BUCKET_NAME": Object {
              "Fn::ImportValue": "another-stack:ExportsOutputRefuserProvidedBucket2349EF2D343936C6",
            },
            "BUCKET_PREFIX": "test",
            "DEIVCE_ACTIVATOR_QUEUE_URL": Object {
              "Ref": "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcaseC43B02DB",
            },
            "DEIVCE_ACTIVATOR_ROLE_ARN": Object {
              "Fn::GetAtt": Array [
                "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcasePushRoletestcase99B435B7",
                "Arn",
              ],
            },
            "test_verifier": Object {
              "Fn::ImportValue": "verifier-stack:ExportsOutputFnGetAtttestcase9BC7DE4DArn30A02383",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 256,
        "Role": Object {
          "Fn::GetAtt": Array [
            "CaRegisterApitestcaseCaRegistrationRoletestcaseDDDC7E56",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 10,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CaRegisterApitestcaseCloudWatchRoleCA9AE705": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CaRegisterApitestcaseDeploymentA61510DD31c106b806b5ce17a0c9fb7449bdb5c6": Object {
      "DependsOn": Array [
        "CaRegisterApitestcaseregisterPOST14D94C4D",
        "CaRegisterApitestcaseregister4C4AC1E7",
      ],
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "CaRegisterApitestcaseFF571B6E",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "CaRegisterApitestcaseDeploymentStageprodDE10CF92": Object {
      "Properties": Object {
        "DeploymentId": Object {
          "Ref": "CaRegisterApitestcaseDeploymentA61510DD31c106b806b5ce17a0c9fb7449bdb5c6",
        },
        "RestApiId": Object {
          "Ref": "CaRegisterApitestcaseFF571B6E",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcase5FE1F333": Object {
      "DependsOn": Array [
        "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseServiceRoleDefaultPolicyC32FC9D0",
        "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseServiceRole78132BE2",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters1aea2b843e6ed43ffc24a54a2cad2c3b6bbe1cd2fe75202bfd59c58305910536S3Bucket061E763D",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters1aea2b843e6ed43ffc24a54a2cad2c3b6bbe1cd2fe75202bfd59c58305910536S3VersionKey226D0F2E",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters1aea2b843e6ed43ffc24a54a2cad2c3b6bbe1cd2fe75202bfd59c58305910536S3VersionKey226D0F2E",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseServiceRole78132BE2",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseDeviceActivationPolicytestcase15BAC635": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "iot:UpdateCertificate",
                "iot:DescribeCertificate",
                "lambda:InvokeFunction",
                "lambda:InvokeAsync",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseDeviceActivationPolicytestcase15BAC635",
        "Roles": Array [
          Object {
            "Ref": "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseServiceRole78132BE2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseServiceRole78132BE2": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseServiceRoleDefaultPolicyC32FC9D0": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sqs:ReceiveMessage",
                "sqs:ChangeMessageVisibility",
                "sqs:GetQueueUrl",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcaseC43B02DB",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseServiceRoleDefaultPolicyC32FC9D0",
        "Roles": Array [
          Object {
            "Ref": "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseServiceRole78132BE2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseSqsEventSourceteststackCaRegisterApitestcaseDeviceActivatortestcaseReceptortestcase84FE82A61B06833F": Object {
      "Properties": Object {
        "BatchSize": 1,
        "EventSourceArn": Object {
          "Fn::GetAtt": Array [
            "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcaseC43B02DB",
            "Arn",
          ],
        },
        "FunctionName": Object {
          "Ref": "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcase5FE1F333",
        },
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcaseC43B02DB": Object {
      "DeletionPolicy": "Delete",
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcasePushRoletestcase99B435B7": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "iot.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "sqs:SendMessageBatch",
                    "sqs:SendMessage",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::GetAtt": Array [
                      "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcaseC43B02DB",
                      "Arn",
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "SqsPushPolicy",
          },
        ],
        "RoleName": "ReceptorPushRoleName-test-case",
      },
      "Type": "AWS::IAM::Role",
    },
    "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcasePushRoletestcaseDefaultPolicy85C6E077": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcaseC43B02DB",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcasePushRoletestcaseDefaultPolicy85C6E077",
        "Roles": Array [
          Object {
            "Ref": "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcasePushRoletestcase99B435B7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CaRegisterApitestcaseFF571B6E": Object {
      "Properties": Object {
        "Name": "test-case",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "CaRegisterApitestcaseregister4C4AC1E7": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "CaRegisterApitestcaseFF571B6E",
            "RootResourceId",
          ],
        },
        "PathPart": "register",
        "RestApiId": Object {
          "Ref": "CaRegisterApitestcaseFF571B6E",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "CaRegisterApitestcaseregisterPOST14D94C4D": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "CaRegisterApitestcaseCaRegistratorFunctiontestcaseB58B98CE",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "CaRegisterApitestcaseregister4C4AC1E7",
        },
        "RestApiId": Object {
          "Ref": "CaRegisterApitestcaseFF571B6E",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "CaRegisterApitestcaseregisterPOSTApiPermissionTestteststackCaRegisterApitestcaseFF910C4APOSTregister6A6A521F": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "CaRegisterApitestcaseCaRegistratorFunctiontestcaseB58B98CE",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "CaRegisterApitestcaseFF571B6E",
              },
              "/test-invoke-stage/POST/register",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "CaRegisterApitestcaseregisterPOSTApiPermissionteststackCaRegisterApitestcaseFF910C4APOSTregisterAF42F0FD": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "CaRegisterApitestcaseCaRegistratorFunctiontestcaseB58B98CE",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "CaRegisterApitestcaseFF571B6E",
              },
              "/",
              Object {
                "Ref": "CaRegisterApitestcaseDeploymentStageprodDE10CF92",
              },
              "/POST/register",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
  },
}
`;

exports[`CaRegisterApi integration test with a specified RestApi and the IAM Authrozation Type is specified 1`] = `
Object {
  "Outputs": Object {
    "testapiEndpoint4AE34D29": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "testapiD6451F70",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "testapiDeploymentStageprod5C9E92A4",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "AssetParameters1aea2b843e6ed43ffc24a54a2cad2c3b6bbe1cd2fe75202bfd59c58305910536ArtifactHash7F1F7260": Object {
      "Description": "Artifact hash for asset \\"1aea2b843e6ed43ffc24a54a2cad2c3b6bbe1cd2fe75202bfd59c58305910536\\"",
      "Type": "String",
    },
    "AssetParameters1aea2b843e6ed43ffc24a54a2cad2c3b6bbe1cd2fe75202bfd59c58305910536S3Bucket061E763D": Object {
      "Description": "S3 bucket for asset \\"1aea2b843e6ed43ffc24a54a2cad2c3b6bbe1cd2fe75202bfd59c58305910536\\"",
      "Type": "String",
    },
    "AssetParameters1aea2b843e6ed43ffc24a54a2cad2c3b6bbe1cd2fe75202bfd59c58305910536S3VersionKey226D0F2E": Object {
      "Description": "S3 key for asset version \\"1aea2b843e6ed43ffc24a54a2cad2c3b6bbe1cd2fe75202bfd59c58305910536\\"",
      "Type": "String",
    },
    "AssetParametersab11131463735378dbf691c33f3f11750e5fb948ca02664e0c840573f212d269ArtifactHash93532F53": Object {
      "Description": "Artifact hash for asset \\"ab11131463735378dbf691c33f3f11750e5fb948ca02664e0c840573f212d269\\"",
      "Type": "String",
    },
    "AssetParametersab11131463735378dbf691c33f3f11750e5fb948ca02664e0c840573f212d269S3BucketE2E3F97F": Object {
      "Description": "S3 bucket for asset \\"ab11131463735378dbf691c33f3f11750e5fb948ca02664e0c840573f212d269\\"",
      "Type": "String",
    },
    "AssetParametersab11131463735378dbf691c33f3f11750e5fb948ca02664e0c840573f212d269S3VersionKeyB0154275": Object {
      "Description": "S3 key for asset version \\"ab11131463735378dbf691c33f3f11750e5fb948ca02664e0c840573f212d269\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "CaRegisterApitestcaseCaRegistrationRoletestcaseDDDC7E56": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "RoleName": "CaRegistrationRoleName-test-case",
      },
      "Type": "AWS::IAM::Role",
    },
    "CaRegisterApitestcaseCaRegistrationRoletestcaseDefaultPolicy8F06888E": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "iam:PassRole",
                "iam:CreateRole",
                "iam:AttachRolePolicy",
                "iot:RegisterCACertificate",
                "iot:TagResource",
                "iot:GetRegistrationCode",
                "iot:CreateTopicRule",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CaRegisterApitestcaseCaRegistrationRoletestcaseDefaultPolicy8F06888E",
        "Roles": Array [
          Object {
            "Ref": "CaRegisterApitestcaseCaRegistrationRoletestcaseDDDC7E56",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CaRegisterApitestcaseCaRegistratorFunctiontestcaseB58B98CE": Object {
      "DependsOn": Array [
        "CaRegisterApitestcaseCaRegistrationRoletestcaseDefaultPolicy8F06888E",
        "CaRegisterApitestcaseCaRegistrationRoletestcaseDDDC7E56",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersab11131463735378dbf691c33f3f11750e5fb948ca02664e0c840573f212d269S3BucketE2E3F97F",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersab11131463735378dbf691c33f3f11750e5fb948ca02664e0c840573f212d269S3VersionKeyB0154275",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersab11131463735378dbf691c33f3f11750e5fb948ca02664e0c840573f212d269S3VersionKeyB0154275",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "BUCKET_NAME": Object {
              "Fn::ImportValue": "another-stack:ExportsOutputRefuserProvidedBucket2349EF2D343936C6",
            },
            "BUCKET_PREFIX": "test",
            "DEIVCE_ACTIVATOR_QUEUE_URL": Object {
              "Ref": "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcaseC43B02DB",
            },
            "DEIVCE_ACTIVATOR_ROLE_ARN": Object {
              "Fn::GetAtt": Array [
                "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcasePushRoletestcase99B435B7",
                "Arn",
              ],
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 256,
        "Role": Object {
          "Fn::GetAtt": Array [
            "CaRegisterApitestcaseCaRegistrationRoletestcaseDDDC7E56",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 10,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcase5FE1F333": Object {
      "DependsOn": Array [
        "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseServiceRoleDefaultPolicyC32FC9D0",
        "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseServiceRole78132BE2",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters1aea2b843e6ed43ffc24a54a2cad2c3b6bbe1cd2fe75202bfd59c58305910536S3Bucket061E763D",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters1aea2b843e6ed43ffc24a54a2cad2c3b6bbe1cd2fe75202bfd59c58305910536S3VersionKey226D0F2E",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters1aea2b843e6ed43ffc24a54a2cad2c3b6bbe1cd2fe75202bfd59c58305910536S3VersionKey226D0F2E",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseServiceRole78132BE2",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseDeviceActivationPolicytestcase15BAC635": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "iot:UpdateCertificate",
                "iot:DescribeCertificate",
                "lambda:InvokeFunction",
                "lambda:InvokeAsync",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseDeviceActivationPolicytestcase15BAC635",
        "Roles": Array [
          Object {
            "Ref": "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseServiceRole78132BE2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseServiceRole78132BE2": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseServiceRoleDefaultPolicyC32FC9D0": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sqs:ReceiveMessage",
                "sqs:ChangeMessageVisibility",
                "sqs:GetQueueUrl",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcaseC43B02DB",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseServiceRoleDefaultPolicyC32FC9D0",
        "Roles": Array [
          Object {
            "Ref": "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseServiceRole78132BE2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseSqsEventSourceteststackCaRegisterApitestcaseDeviceActivatortestcaseReceptortestcase84FE82A61B06833F": Object {
      "Properties": Object {
        "BatchSize": 1,
        "EventSourceArn": Object {
          "Fn::GetAtt": Array [
            "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcaseC43B02DB",
            "Arn",
          ],
        },
        "FunctionName": Object {
          "Ref": "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcase5FE1F333",
        },
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcaseC43B02DB": Object {
      "DeletionPolicy": "Delete",
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcasePushRoletestcase99B435B7": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "iot.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "sqs:SendMessageBatch",
                    "sqs:SendMessage",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::GetAtt": Array [
                      "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcaseC43B02DB",
                      "Arn",
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "SqsPushPolicy",
          },
        ],
        "RoleName": "ReceptorPushRoleName-test-case",
      },
      "Type": "AWS::IAM::Role",
    },
    "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcasePushRoletestcaseDefaultPolicy85C6E077": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcaseC43B02DB",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcasePushRoletestcaseDefaultPolicy85C6E077",
        "Roles": Array [
          Object {
            "Ref": "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcasePushRoletestcase99B435B7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testapiAccount9B907665": Object {
      "DependsOn": Array [
        "testapiD6451F70",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "testapiCloudWatchRoleD7BD24A1",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "testapiCloudWatchRoleD7BD24A1": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "testapiD6451F70": Object {
      "Properties": Object {
        "Name": "test-api",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "testapiDeployment356D2C356095b2703e88cd71dde8cc25d1f3289d": Object {
      "DependsOn": Array [
        "testapiregisterPOST60A8BA5A",
        "testapiregisterD37E6654",
      ],
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "testapiD6451F70",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "testapiDeploymentStageprod5C9E92A4": Object {
      "Properties": Object {
        "DeploymentId": Object {
          "Ref": "testapiDeployment356D2C356095b2703e88cd71dde8cc25d1f3289d",
        },
        "RestApiId": Object {
          "Ref": "testapiD6451F70",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "testapiregisterD37E6654": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "testapiD6451F70",
            "RootResourceId",
          ],
        },
        "PathPart": "register",
        "RestApiId": Object {
          "Ref": "testapiD6451F70",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testapiregisterPOST60A8BA5A": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "CaRegisterApitestcaseCaRegistratorFunctiontestcaseB58B98CE",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "testapiregisterD37E6654",
        },
        "RestApiId": Object {
          "Ref": "testapiD6451F70",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testapiregisterPOSTApiPermissionTestteststacktestapi8A9875EAPOSTregisterDBD9D9DB": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "CaRegisterApitestcaseCaRegistratorFunctiontestcaseB58B98CE",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "testapiD6451F70",
              },
              "/test-invoke-stage/POST/register",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testapiregisterPOSTApiPermissionteststacktestapi8A9875EAPOSTregister34F9388F": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "CaRegisterApitestcaseCaRegistratorFunctiontestcaseB58B98CE",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "testapiD6451F70",
              },
              "/",
              Object {
                "Ref": "testapiDeploymentStageprod5C9E92A4",
              },
              "/POST/register",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
  },
}
`;

exports[`CaRegisterApi integration test with a specified RestApi and the IAM Authrozation Type is specified 2`] = `
Object {
  "Outputs": Object {
    "testapiEndpoint4AE34D29": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "testapiD6451F70",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "testapiDeploymentStageprod5C9E92A4",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "AssetParameters1aea2b843e6ed43ffc24a54a2cad2c3b6bbe1cd2fe75202bfd59c58305910536ArtifactHash7F1F7260": Object {
      "Description": "Artifact hash for asset \\"1aea2b843e6ed43ffc24a54a2cad2c3b6bbe1cd2fe75202bfd59c58305910536\\"",
      "Type": "String",
    },
    "AssetParameters1aea2b843e6ed43ffc24a54a2cad2c3b6bbe1cd2fe75202bfd59c58305910536S3Bucket061E763D": Object {
      "Description": "S3 bucket for asset \\"1aea2b843e6ed43ffc24a54a2cad2c3b6bbe1cd2fe75202bfd59c58305910536\\"",
      "Type": "String",
    },
    "AssetParameters1aea2b843e6ed43ffc24a54a2cad2c3b6bbe1cd2fe75202bfd59c58305910536S3VersionKey226D0F2E": Object {
      "Description": "S3 key for asset version \\"1aea2b843e6ed43ffc24a54a2cad2c3b6bbe1cd2fe75202bfd59c58305910536\\"",
      "Type": "String",
    },
    "AssetParametersab11131463735378dbf691c33f3f11750e5fb948ca02664e0c840573f212d269ArtifactHash93532F53": Object {
      "Description": "Artifact hash for asset \\"ab11131463735378dbf691c33f3f11750e5fb948ca02664e0c840573f212d269\\"",
      "Type": "String",
    },
    "AssetParametersab11131463735378dbf691c33f3f11750e5fb948ca02664e0c840573f212d269S3BucketE2E3F97F": Object {
      "Description": "S3 bucket for asset \\"ab11131463735378dbf691c33f3f11750e5fb948ca02664e0c840573f212d269\\"",
      "Type": "String",
    },
    "AssetParametersab11131463735378dbf691c33f3f11750e5fb948ca02664e0c840573f212d269S3VersionKeyB0154275": Object {
      "Description": "S3 key for asset version \\"ab11131463735378dbf691c33f3f11750e5fb948ca02664e0c840573f212d269\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "CaRegisterApitestcaseCaRegistrationRoletestcaseDDDC7E56": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "RoleName": "CaRegistrationRoleName-test-case",
      },
      "Type": "AWS::IAM::Role",
    },
    "CaRegisterApitestcaseCaRegistrationRoletestcaseDefaultPolicy8F06888E": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "iam:PassRole",
                "iam:CreateRole",
                "iam:AttachRolePolicy",
                "iot:RegisterCACertificate",
                "iot:TagResource",
                "iot:GetRegistrationCode",
                "iot:CreateTopicRule",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CaRegisterApitestcaseCaRegistrationRoletestcaseDefaultPolicy8F06888E",
        "Roles": Array [
          Object {
            "Ref": "CaRegisterApitestcaseCaRegistrationRoletestcaseDDDC7E56",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CaRegisterApitestcaseCaRegistratorFunctiontestcaseB58B98CE": Object {
      "DependsOn": Array [
        "CaRegisterApitestcaseCaRegistrationRoletestcaseDefaultPolicy8F06888E",
        "CaRegisterApitestcaseCaRegistrationRoletestcaseDDDC7E56",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersab11131463735378dbf691c33f3f11750e5fb948ca02664e0c840573f212d269S3BucketE2E3F97F",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersab11131463735378dbf691c33f3f11750e5fb948ca02664e0c840573f212d269S3VersionKeyB0154275",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersab11131463735378dbf691c33f3f11750e5fb948ca02664e0c840573f212d269S3VersionKeyB0154275",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "BUCKET_NAME": Object {
              "Fn::ImportValue": "another-stack:ExportsOutputRefuserProvidedBucket2349EF2D343936C6",
            },
            "BUCKET_PREFIX": "test",
            "DEIVCE_ACTIVATOR_QUEUE_URL": Object {
              "Ref": "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcaseC43B02DB",
            },
            "DEIVCE_ACTIVATOR_ROLE_ARN": Object {
              "Fn::GetAtt": Array [
                "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcasePushRoletestcase99B435B7",
                "Arn",
              ],
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 256,
        "Role": Object {
          "Fn::GetAtt": Array [
            "CaRegisterApitestcaseCaRegistrationRoletestcaseDDDC7E56",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 10,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcase5FE1F333": Object {
      "DependsOn": Array [
        "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseServiceRoleDefaultPolicyC32FC9D0",
        "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseServiceRole78132BE2",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters1aea2b843e6ed43ffc24a54a2cad2c3b6bbe1cd2fe75202bfd59c58305910536S3Bucket061E763D",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters1aea2b843e6ed43ffc24a54a2cad2c3b6bbe1cd2fe75202bfd59c58305910536S3VersionKey226D0F2E",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters1aea2b843e6ed43ffc24a54a2cad2c3b6bbe1cd2fe75202bfd59c58305910536S3VersionKey226D0F2E",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseServiceRole78132BE2",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseDeviceActivationPolicytestcase15BAC635": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "iot:UpdateCertificate",
                "iot:DescribeCertificate",
                "lambda:InvokeFunction",
                "lambda:InvokeAsync",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseDeviceActivationPolicytestcase15BAC635",
        "Roles": Array [
          Object {
            "Ref": "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseServiceRole78132BE2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseServiceRole78132BE2": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseServiceRoleDefaultPolicyC32FC9D0": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sqs:ReceiveMessage",
                "sqs:ChangeMessageVisibility",
                "sqs:GetQueueUrl",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcaseC43B02DB",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseServiceRoleDefaultPolicyC32FC9D0",
        "Roles": Array [
          Object {
            "Ref": "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseServiceRole78132BE2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseSqsEventSourceteststackCaRegisterApitestcaseDeviceActivatortestcaseReceptortestcase84FE82A61B06833F": Object {
      "Properties": Object {
        "BatchSize": 1,
        "EventSourceArn": Object {
          "Fn::GetAtt": Array [
            "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcaseC43B02DB",
            "Arn",
          ],
        },
        "FunctionName": Object {
          "Ref": "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcase5FE1F333",
        },
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcaseC43B02DB": Object {
      "DeletionPolicy": "Delete",
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcasePushRoletestcase99B435B7": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "iot.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "sqs:SendMessageBatch",
                    "sqs:SendMessage",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::GetAtt": Array [
                      "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcaseC43B02DB",
                      "Arn",
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "SqsPushPolicy",
          },
        ],
        "RoleName": "ReceptorPushRoleName-test-case",
      },
      "Type": "AWS::IAM::Role",
    },
    "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcasePushRoletestcaseDefaultPolicy85C6E077": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcaseC43B02DB",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcasePushRoletestcaseDefaultPolicy85C6E077",
        "Roles": Array [
          Object {
            "Ref": "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcasePushRoletestcase99B435B7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testapiAccount9B907665": Object {
      "DependsOn": Array [
        "testapiD6451F70",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "testapiCloudWatchRoleD7BD24A1",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "testapiCloudWatchRoleD7BD24A1": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "testapiD6451F70": Object {
      "Properties": Object {
        "Name": "test-api",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "testapiDeployment356D2C356095b2703e88cd71dde8cc25d1f3289d": Object {
      "DependsOn": Array [
        "testapiregisterPOST60A8BA5A",
        "testapiregisterD37E6654",
      ],
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "testapiD6451F70",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "testapiDeploymentStageprod5C9E92A4": Object {
      "Properties": Object {
        "DeploymentId": Object {
          "Ref": "testapiDeployment356D2C356095b2703e88cd71dde8cc25d1f3289d",
        },
        "RestApiId": Object {
          "Ref": "testapiD6451F70",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "testapiregisterD37E6654": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "testapiD6451F70",
            "RootResourceId",
          ],
        },
        "PathPart": "register",
        "RestApiId": Object {
          "Ref": "testapiD6451F70",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testapiregisterPOST60A8BA5A": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "CaRegisterApitestcaseCaRegistratorFunctiontestcaseB58B98CE",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "testapiregisterD37E6654",
        },
        "RestApiId": Object {
          "Ref": "testapiD6451F70",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testapiregisterPOSTApiPermissionTestteststacktestapi8A9875EAPOSTregisterDBD9D9DB": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "CaRegisterApitestcaseCaRegistratorFunctiontestcaseB58B98CE",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "testapiD6451F70",
              },
              "/test-invoke-stage/POST/register",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testapiregisterPOSTApiPermissionteststacktestapi8A9875EAPOSTregister34F9388F": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "CaRegisterApitestcaseCaRegistratorFunctiontestcaseB58B98CE",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "testapiD6451F70",
              },
              "/",
              Object {
                "Ref": "testapiDeploymentStageprod5C9E92A4",
              },
              "/POST/register",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
  },
}
`;

exports[`CaRegisterApi integration test without specifying a verifier 1`] = `
Object {
  "Outputs": Object {
    "CaRegisterApitestcaseEndpointEF186608": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "CaRegisterApitestcaseFF571B6E",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "CaRegisterApitestcaseDeploymentStageprodDE10CF92",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "AssetParameters1aea2b843e6ed43ffc24a54a2cad2c3b6bbe1cd2fe75202bfd59c58305910536ArtifactHash7F1F7260": Object {
      "Description": "Artifact hash for asset \\"1aea2b843e6ed43ffc24a54a2cad2c3b6bbe1cd2fe75202bfd59c58305910536\\"",
      "Type": "String",
    },
    "AssetParameters1aea2b843e6ed43ffc24a54a2cad2c3b6bbe1cd2fe75202bfd59c58305910536S3Bucket061E763D": Object {
      "Description": "S3 bucket for asset \\"1aea2b843e6ed43ffc24a54a2cad2c3b6bbe1cd2fe75202bfd59c58305910536\\"",
      "Type": "String",
    },
    "AssetParameters1aea2b843e6ed43ffc24a54a2cad2c3b6bbe1cd2fe75202bfd59c58305910536S3VersionKey226D0F2E": Object {
      "Description": "S3 key for asset version \\"1aea2b843e6ed43ffc24a54a2cad2c3b6bbe1cd2fe75202bfd59c58305910536\\"",
      "Type": "String",
    },
    "AssetParametersab11131463735378dbf691c33f3f11750e5fb948ca02664e0c840573f212d269ArtifactHash93532F53": Object {
      "Description": "Artifact hash for asset \\"ab11131463735378dbf691c33f3f11750e5fb948ca02664e0c840573f212d269\\"",
      "Type": "String",
    },
    "AssetParametersab11131463735378dbf691c33f3f11750e5fb948ca02664e0c840573f212d269S3BucketE2E3F97F": Object {
      "Description": "S3 bucket for asset \\"ab11131463735378dbf691c33f3f11750e5fb948ca02664e0c840573f212d269\\"",
      "Type": "String",
    },
    "AssetParametersab11131463735378dbf691c33f3f11750e5fb948ca02664e0c840573f212d269S3VersionKeyB0154275": Object {
      "Description": "S3 key for asset version \\"ab11131463735378dbf691c33f3f11750e5fb948ca02664e0c840573f212d269\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "CaRegisterApitestcaseAccount8E47E814": Object {
      "DependsOn": Array [
        "CaRegisterApitestcaseFF571B6E",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "CaRegisterApitestcaseCloudWatchRoleCA9AE705",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "CaRegisterApitestcaseCaRegistrationRoletestcaseDDDC7E56": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "RoleName": "CaRegistrationRoleName-test-case",
      },
      "Type": "AWS::IAM::Role",
    },
    "CaRegisterApitestcaseCaRegistrationRoletestcaseDefaultPolicy8F06888E": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "iam:PassRole",
                "iam:CreateRole",
                "iam:AttachRolePolicy",
                "iot:RegisterCACertificate",
                "iot:TagResource",
                "iot:GetRegistrationCode",
                "iot:CreateTopicRule",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CaRegisterApitestcaseCaRegistrationRoletestcaseDefaultPolicy8F06888E",
        "Roles": Array [
          Object {
            "Ref": "CaRegisterApitestcaseCaRegistrationRoletestcaseDDDC7E56",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CaRegisterApitestcaseCaRegistratorFunctiontestcaseB58B98CE": Object {
      "DependsOn": Array [
        "CaRegisterApitestcaseCaRegistrationRoletestcaseDefaultPolicy8F06888E",
        "CaRegisterApitestcaseCaRegistrationRoletestcaseDDDC7E56",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersab11131463735378dbf691c33f3f11750e5fb948ca02664e0c840573f212d269S3BucketE2E3F97F",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersab11131463735378dbf691c33f3f11750e5fb948ca02664e0c840573f212d269S3VersionKeyB0154275",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersab11131463735378dbf691c33f3f11750e5fb948ca02664e0c840573f212d269S3VersionKeyB0154275",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "BUCKET_NAME": Object {
              "Fn::ImportValue": "another-stack:ExportsOutputRefuserProvidedBucket2349EF2D343936C6",
            },
            "BUCKET_PREFIX": "test",
            "DEIVCE_ACTIVATOR_QUEUE_URL": Object {
              "Ref": "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcaseC43B02DB",
            },
            "DEIVCE_ACTIVATOR_ROLE_ARN": Object {
              "Fn::GetAtt": Array [
                "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcasePushRoletestcase99B435B7",
                "Arn",
              ],
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 256,
        "Role": Object {
          "Fn::GetAtt": Array [
            "CaRegisterApitestcaseCaRegistrationRoletestcaseDDDC7E56",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 10,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CaRegisterApitestcaseCloudWatchRoleCA9AE705": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CaRegisterApitestcaseDeploymentA61510DD31c106b806b5ce17a0c9fb7449bdb5c6": Object {
      "DependsOn": Array [
        "CaRegisterApitestcaseregisterPOST14D94C4D",
        "CaRegisterApitestcaseregister4C4AC1E7",
      ],
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "CaRegisterApitestcaseFF571B6E",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "CaRegisterApitestcaseDeploymentStageprodDE10CF92": Object {
      "Properties": Object {
        "DeploymentId": Object {
          "Ref": "CaRegisterApitestcaseDeploymentA61510DD31c106b806b5ce17a0c9fb7449bdb5c6",
        },
        "RestApiId": Object {
          "Ref": "CaRegisterApitestcaseFF571B6E",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcase5FE1F333": Object {
      "DependsOn": Array [
        "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseServiceRoleDefaultPolicyC32FC9D0",
        "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseServiceRole78132BE2",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters1aea2b843e6ed43ffc24a54a2cad2c3b6bbe1cd2fe75202bfd59c58305910536S3Bucket061E763D",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters1aea2b843e6ed43ffc24a54a2cad2c3b6bbe1cd2fe75202bfd59c58305910536S3VersionKey226D0F2E",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters1aea2b843e6ed43ffc24a54a2cad2c3b6bbe1cd2fe75202bfd59c58305910536S3VersionKey226D0F2E",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseServiceRole78132BE2",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseDeviceActivationPolicytestcase15BAC635": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "iot:UpdateCertificate",
                "iot:DescribeCertificate",
                "lambda:InvokeFunction",
                "lambda:InvokeAsync",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseDeviceActivationPolicytestcase15BAC635",
        "Roles": Array [
          Object {
            "Ref": "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseServiceRole78132BE2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseServiceRole78132BE2": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseServiceRoleDefaultPolicyC32FC9D0": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sqs:ReceiveMessage",
                "sqs:ChangeMessageVisibility",
                "sqs:GetQueueUrl",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcaseC43B02DB",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseServiceRoleDefaultPolicyC32FC9D0",
        "Roles": Array [
          Object {
            "Ref": "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseServiceRole78132BE2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseSqsEventSourceteststackCaRegisterApitestcaseDeviceActivatortestcaseReceptortestcase84FE82A61B06833F": Object {
      "Properties": Object {
        "BatchSize": 1,
        "EventSourceArn": Object {
          "Fn::GetAtt": Array [
            "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcaseC43B02DB",
            "Arn",
          ],
        },
        "FunctionName": Object {
          "Ref": "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcase5FE1F333",
        },
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcaseC43B02DB": Object {
      "DeletionPolicy": "Delete",
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcasePushRoletestcase99B435B7": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "iot.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "sqs:SendMessageBatch",
                    "sqs:SendMessage",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::GetAtt": Array [
                      "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcaseC43B02DB",
                      "Arn",
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "SqsPushPolicy",
          },
        ],
        "RoleName": "ReceptorPushRoleName-test-case",
      },
      "Type": "AWS::IAM::Role",
    },
    "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcasePushRoletestcaseDefaultPolicy85C6E077": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcaseC43B02DB",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcasePushRoletestcaseDefaultPolicy85C6E077",
        "Roles": Array [
          Object {
            "Ref": "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcasePushRoletestcase99B435B7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CaRegisterApitestcaseFF571B6E": Object {
      "Properties": Object {
        "Name": "test-case",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "CaRegisterApitestcaseregister4C4AC1E7": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "CaRegisterApitestcaseFF571B6E",
            "RootResourceId",
          ],
        },
        "PathPart": "register",
        "RestApiId": Object {
          "Ref": "CaRegisterApitestcaseFF571B6E",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "CaRegisterApitestcaseregisterPOST14D94C4D": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "CaRegisterApitestcaseCaRegistratorFunctiontestcaseB58B98CE",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "CaRegisterApitestcaseregister4C4AC1E7",
        },
        "RestApiId": Object {
          "Ref": "CaRegisterApitestcaseFF571B6E",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "CaRegisterApitestcaseregisterPOSTApiPermissionTestteststackCaRegisterApitestcaseFF910C4APOSTregister6A6A521F": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "CaRegisterApitestcaseCaRegistratorFunctiontestcaseB58B98CE",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "CaRegisterApitestcaseFF571B6E",
              },
              "/test-invoke-stage/POST/register",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "CaRegisterApitestcaseregisterPOSTApiPermissionteststackCaRegisterApitestcaseFF910C4APOSTregisterAF42F0FD": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "CaRegisterApitestcaseCaRegistratorFunctiontestcaseB58B98CE",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "CaRegisterApitestcaseFF571B6E",
              },
              "/",
              Object {
                "Ref": "CaRegisterApitestcaseDeploymentStageprodDE10CF92",
              },
              "/POST/register",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
  },
}
`;

exports[`Initialize CaRegisterApi with a Cognito-Authorized RestApi 1`] = `
Object {
  "Outputs": Object {
    "testapiEndpoint4AE34D29": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "testapiD6451F70",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "testapiDeploymentStageprod5C9E92A4",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "AssetParameters1aea2b843e6ed43ffc24a54a2cad2c3b6bbe1cd2fe75202bfd59c58305910536ArtifactHash7F1F7260": Object {
      "Description": "Artifact hash for asset \\"1aea2b843e6ed43ffc24a54a2cad2c3b6bbe1cd2fe75202bfd59c58305910536\\"",
      "Type": "String",
    },
    "AssetParameters1aea2b843e6ed43ffc24a54a2cad2c3b6bbe1cd2fe75202bfd59c58305910536S3Bucket061E763D": Object {
      "Description": "S3 bucket for asset \\"1aea2b843e6ed43ffc24a54a2cad2c3b6bbe1cd2fe75202bfd59c58305910536\\"",
      "Type": "String",
    },
    "AssetParameters1aea2b843e6ed43ffc24a54a2cad2c3b6bbe1cd2fe75202bfd59c58305910536S3VersionKey226D0F2E": Object {
      "Description": "S3 key for asset version \\"1aea2b843e6ed43ffc24a54a2cad2c3b6bbe1cd2fe75202bfd59c58305910536\\"",
      "Type": "String",
    },
    "AssetParametersab11131463735378dbf691c33f3f11750e5fb948ca02664e0c840573f212d269ArtifactHash93532F53": Object {
      "Description": "Artifact hash for asset \\"ab11131463735378dbf691c33f3f11750e5fb948ca02664e0c840573f212d269\\"",
      "Type": "String",
    },
    "AssetParametersab11131463735378dbf691c33f3f11750e5fb948ca02664e0c840573f212d269S3BucketE2E3F97F": Object {
      "Description": "S3 bucket for asset \\"ab11131463735378dbf691c33f3f11750e5fb948ca02664e0c840573f212d269\\"",
      "Type": "String",
    },
    "AssetParametersab11131463735378dbf691c33f3f11750e5fb948ca02664e0c840573f212d269S3VersionKeyB0154275": Object {
      "Description": "S3 key for asset version \\"ab11131463735378dbf691c33f3f11750e5fb948ca02664e0c840573f212d269\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "CaRegisterApitestcaseCaRegistrationRoletestcaseDDDC7E56": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "RoleName": "CaRegistrationRoleName-test-case",
      },
      "Type": "AWS::IAM::Role",
    },
    "CaRegisterApitestcaseCaRegistrationRoletestcaseDefaultPolicy8F06888E": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "iam:PassRole",
                "iam:CreateRole",
                "iam:AttachRolePolicy",
                "iot:RegisterCACertificate",
                "iot:TagResource",
                "iot:GetRegistrationCode",
                "iot:CreateTopicRule",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CaRegisterApitestcaseCaRegistrationRoletestcaseDefaultPolicy8F06888E",
        "Roles": Array [
          Object {
            "Ref": "CaRegisterApitestcaseCaRegistrationRoletestcaseDDDC7E56",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CaRegisterApitestcaseCaRegistratorFunctiontestcaseB58B98CE": Object {
      "DependsOn": Array [
        "CaRegisterApitestcaseCaRegistrationRoletestcaseDefaultPolicy8F06888E",
        "CaRegisterApitestcaseCaRegistrationRoletestcaseDDDC7E56",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersab11131463735378dbf691c33f3f11750e5fb948ca02664e0c840573f212d269S3BucketE2E3F97F",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersab11131463735378dbf691c33f3f11750e5fb948ca02664e0c840573f212d269S3VersionKeyB0154275",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersab11131463735378dbf691c33f3f11750e5fb948ca02664e0c840573f212d269S3VersionKeyB0154275",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "BUCKET_NAME": Object {
              "Fn::ImportValue": "another-stack:ExportsOutputRefuserProvidedBucket2349EF2D343936C6",
            },
            "BUCKET_PREFIX": "test",
            "DEIVCE_ACTIVATOR_QUEUE_URL": Object {
              "Ref": "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcaseC43B02DB",
            },
            "DEIVCE_ACTIVATOR_ROLE_ARN": Object {
              "Fn::GetAtt": Array [
                "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcasePushRoletestcase99B435B7",
                "Arn",
              ],
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 256,
        "Role": Object {
          "Fn::GetAtt": Array [
            "CaRegisterApitestcaseCaRegistrationRoletestcaseDDDC7E56",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 10,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcase5FE1F333": Object {
      "DependsOn": Array [
        "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseServiceRoleDefaultPolicyC32FC9D0",
        "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseServiceRole78132BE2",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters1aea2b843e6ed43ffc24a54a2cad2c3b6bbe1cd2fe75202bfd59c58305910536S3Bucket061E763D",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters1aea2b843e6ed43ffc24a54a2cad2c3b6bbe1cd2fe75202bfd59c58305910536S3VersionKey226D0F2E",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters1aea2b843e6ed43ffc24a54a2cad2c3b6bbe1cd2fe75202bfd59c58305910536S3VersionKey226D0F2E",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseServiceRole78132BE2",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseDeviceActivationPolicytestcase15BAC635": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "iot:UpdateCertificate",
                "iot:DescribeCertificate",
                "lambda:InvokeFunction",
                "lambda:InvokeAsync",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseDeviceActivationPolicytestcase15BAC635",
        "Roles": Array [
          Object {
            "Ref": "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseServiceRole78132BE2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseServiceRole78132BE2": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseServiceRoleDefaultPolicyC32FC9D0": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sqs:ReceiveMessage",
                "sqs:ChangeMessageVisibility",
                "sqs:GetQueueUrl",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcaseC43B02DB",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseServiceRoleDefaultPolicyC32FC9D0",
        "Roles": Array [
          Object {
            "Ref": "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseServiceRole78132BE2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseSqsEventSourceteststackCaRegisterApitestcaseDeviceActivatortestcaseReceptortestcase84FE82A61B06833F": Object {
      "Properties": Object {
        "BatchSize": 1,
        "EventSourceArn": Object {
          "Fn::GetAtt": Array [
            "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcaseC43B02DB",
            "Arn",
          ],
        },
        "FunctionName": Object {
          "Ref": "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcase5FE1F333",
        },
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcaseC43B02DB": Object {
      "DeletionPolicy": "Delete",
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcasePushRoletestcase99B435B7": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "iot.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "sqs:SendMessageBatch",
                    "sqs:SendMessage",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::GetAtt": Array [
                      "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcaseC43B02DB",
                      "Arn",
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "SqsPushPolicy",
          },
        ],
        "RoleName": "ReceptorPushRoleName-test-case",
      },
      "Type": "AWS::IAM::Role",
    },
    "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcasePushRoletestcaseDefaultPolicy85C6E077": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcaseC43B02DB",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcasePushRoletestcaseDefaultPolicy85C6E077",
        "Roles": Array [
          Object {
            "Ref": "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcasePushRoletestcase99B435B7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testapiAccount9B907665": Object {
      "DependsOn": Array [
        "testapiD6451F70",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "testapiCloudWatchRoleD7BD24A1",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "testapiCloudWatchRoleD7BD24A1": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "testapiD6451F70": Object {
      "Properties": Object {
        "Name": "test-api",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "testapiDeployment356D2C35d52c7e3f6b594f47ff81da1b3bbcb1f7": Object {
      "DependsOn": Array [
        "testapiregisterPOST60A8BA5A",
        "testapiregisterD37E6654",
      ],
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "testapiD6451F70",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "testapiDeploymentStageprod5C9E92A4": Object {
      "Properties": Object {
        "DeploymentId": Object {
          "Ref": "testapiDeployment356D2C35d52c7e3f6b594f47ff81da1b3bbcb1f7",
        },
        "RestApiId": Object {
          "Ref": "testapiD6451F70",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "testapiregisterD37E6654": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "testapiD6451F70",
            "RootResourceId",
          ],
        },
        "PathPart": "register",
        "RestApiId": Object {
          "Ref": "testapiD6451F70",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testapiregisterPOST60A8BA5A": Object {
      "Properties": Object {
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": "authorizer_id",
        "HttpMethod": "POST",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "CaRegisterApitestcaseCaRegistratorFunctiontestcaseB58B98CE",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "testapiregisterD37E6654",
        },
        "RestApiId": Object {
          "Ref": "testapiD6451F70",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testapiregisterPOSTApiPermissionTestteststacktestapi8A9875EAPOSTregisterDBD9D9DB": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "CaRegisterApitestcaseCaRegistratorFunctiontestcaseB58B98CE",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "testapiD6451F70",
              },
              "/test-invoke-stage/POST/register",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testapiregisterPOSTApiPermissionteststacktestapi8A9875EAPOSTregister34F9388F": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "CaRegisterApitestcaseCaRegistratorFunctiontestcaseB58B98CE",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "testapiD6451F70",
              },
              "/",
              Object {
                "Ref": "testapiDeploymentStageprod5C9E92A4",
              },
              "/POST/register",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
  },
}
`;

exports[`Initialize CaRegisterApi with a Custom-Authorized RestApi 1`] = `
Object {
  "Outputs": Object {
    "testapiEndpoint4AE34D29": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "testapiD6451F70",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "testapiDeploymentStageprod5C9E92A4",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "AssetParameters1aea2b843e6ed43ffc24a54a2cad2c3b6bbe1cd2fe75202bfd59c58305910536ArtifactHash7F1F7260": Object {
      "Description": "Artifact hash for asset \\"1aea2b843e6ed43ffc24a54a2cad2c3b6bbe1cd2fe75202bfd59c58305910536\\"",
      "Type": "String",
    },
    "AssetParameters1aea2b843e6ed43ffc24a54a2cad2c3b6bbe1cd2fe75202bfd59c58305910536S3Bucket061E763D": Object {
      "Description": "S3 bucket for asset \\"1aea2b843e6ed43ffc24a54a2cad2c3b6bbe1cd2fe75202bfd59c58305910536\\"",
      "Type": "String",
    },
    "AssetParameters1aea2b843e6ed43ffc24a54a2cad2c3b6bbe1cd2fe75202bfd59c58305910536S3VersionKey226D0F2E": Object {
      "Description": "S3 key for asset version \\"1aea2b843e6ed43ffc24a54a2cad2c3b6bbe1cd2fe75202bfd59c58305910536\\"",
      "Type": "String",
    },
    "AssetParametersab11131463735378dbf691c33f3f11750e5fb948ca02664e0c840573f212d269ArtifactHash93532F53": Object {
      "Description": "Artifact hash for asset \\"ab11131463735378dbf691c33f3f11750e5fb948ca02664e0c840573f212d269\\"",
      "Type": "String",
    },
    "AssetParametersab11131463735378dbf691c33f3f11750e5fb948ca02664e0c840573f212d269S3BucketE2E3F97F": Object {
      "Description": "S3 bucket for asset \\"ab11131463735378dbf691c33f3f11750e5fb948ca02664e0c840573f212d269\\"",
      "Type": "String",
    },
    "AssetParametersab11131463735378dbf691c33f3f11750e5fb948ca02664e0c840573f212d269S3VersionKeyB0154275": Object {
      "Description": "S3 key for asset version \\"ab11131463735378dbf691c33f3f11750e5fb948ca02664e0c840573f212d269\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "CaRegisterApitestcaseCaRegistrationRoletestcaseDDDC7E56": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "RoleName": "CaRegistrationRoleName-test-case",
      },
      "Type": "AWS::IAM::Role",
    },
    "CaRegisterApitestcaseCaRegistrationRoletestcaseDefaultPolicy8F06888E": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "iam:PassRole",
                "iam:CreateRole",
                "iam:AttachRolePolicy",
                "iot:RegisterCACertificate",
                "iot:TagResource",
                "iot:GetRegistrationCode",
                "iot:CreateTopicRule",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CaRegisterApitestcaseCaRegistrationRoletestcaseDefaultPolicy8F06888E",
        "Roles": Array [
          Object {
            "Ref": "CaRegisterApitestcaseCaRegistrationRoletestcaseDDDC7E56",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CaRegisterApitestcaseCaRegistratorFunctiontestcaseB58B98CE": Object {
      "DependsOn": Array [
        "CaRegisterApitestcaseCaRegistrationRoletestcaseDefaultPolicy8F06888E",
        "CaRegisterApitestcaseCaRegistrationRoletestcaseDDDC7E56",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersab11131463735378dbf691c33f3f11750e5fb948ca02664e0c840573f212d269S3BucketE2E3F97F",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersab11131463735378dbf691c33f3f11750e5fb948ca02664e0c840573f212d269S3VersionKeyB0154275",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersab11131463735378dbf691c33f3f11750e5fb948ca02664e0c840573f212d269S3VersionKeyB0154275",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "BUCKET_NAME": Object {
              "Fn::ImportValue": "another-stack:ExportsOutputRefuserProvidedBucket2349EF2D343936C6",
            },
            "BUCKET_PREFIX": "test",
            "DEIVCE_ACTIVATOR_QUEUE_URL": Object {
              "Ref": "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcaseC43B02DB",
            },
            "DEIVCE_ACTIVATOR_ROLE_ARN": Object {
              "Fn::GetAtt": Array [
                "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcasePushRoletestcase99B435B7",
                "Arn",
              ],
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 256,
        "Role": Object {
          "Fn::GetAtt": Array [
            "CaRegisterApitestcaseCaRegistrationRoletestcaseDDDC7E56",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 10,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcase5FE1F333": Object {
      "DependsOn": Array [
        "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseServiceRoleDefaultPolicyC32FC9D0",
        "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseServiceRole78132BE2",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters1aea2b843e6ed43ffc24a54a2cad2c3b6bbe1cd2fe75202bfd59c58305910536S3Bucket061E763D",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters1aea2b843e6ed43ffc24a54a2cad2c3b6bbe1cd2fe75202bfd59c58305910536S3VersionKey226D0F2E",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters1aea2b843e6ed43ffc24a54a2cad2c3b6bbe1cd2fe75202bfd59c58305910536S3VersionKey226D0F2E",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseServiceRole78132BE2",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseDeviceActivationPolicytestcase15BAC635": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "iot:UpdateCertificate",
                "iot:DescribeCertificate",
                "lambda:InvokeFunction",
                "lambda:InvokeAsync",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseDeviceActivationPolicytestcase15BAC635",
        "Roles": Array [
          Object {
            "Ref": "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseServiceRole78132BE2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseServiceRole78132BE2": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseServiceRoleDefaultPolicyC32FC9D0": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sqs:ReceiveMessage",
                "sqs:ChangeMessageVisibility",
                "sqs:GetQueueUrl",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcaseC43B02DB",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseServiceRoleDefaultPolicyC32FC9D0",
        "Roles": Array [
          Object {
            "Ref": "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseServiceRole78132BE2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcaseSqsEventSourceteststackCaRegisterApitestcaseDeviceActivatortestcaseReceptortestcase84FE82A61B06833F": Object {
      "Properties": Object {
        "BatchSize": 1,
        "EventSourceArn": Object {
          "Fn::GetAtt": Array [
            "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcaseC43B02DB",
            "Arn",
          ],
        },
        "FunctionName": Object {
          "Ref": "CaRegisterApitestcaseDeviceActivatortestcaseDeviceActivatorFunctiontestcase5FE1F333",
        },
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcaseC43B02DB": Object {
      "DeletionPolicy": "Delete",
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcasePushRoletestcase99B435B7": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "iot.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "sqs:SendMessageBatch",
                    "sqs:SendMessage",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::GetAtt": Array [
                      "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcaseC43B02DB",
                      "Arn",
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "SqsPushPolicy",
          },
        ],
        "RoleName": "ReceptorPushRoleName-test-case",
      },
      "Type": "AWS::IAM::Role",
    },
    "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcasePushRoletestcaseDefaultPolicy85C6E077": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcaseC43B02DB",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcasePushRoletestcaseDefaultPolicy85C6E077",
        "Roles": Array [
          Object {
            "Ref": "CaRegisterApitestcaseDeviceActivatortestcaseReceptortestcasePushRoletestcase99B435B7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testapiAccount9B907665": Object {
      "DependsOn": Array [
        "testapiD6451F70",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "testapiCloudWatchRoleD7BD24A1",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "testapiCloudWatchRoleD7BD24A1": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "testapiD6451F70": Object {
      "Properties": Object {
        "Name": "test-api",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "testapiDeployment356D2C355de403ccb8bbc92f1efba8f1137d2fbb": Object {
      "DependsOn": Array [
        "testapiregisterPOST60A8BA5A",
        "testapiregisterD37E6654",
      ],
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "testapiD6451F70",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "testapiDeploymentStageprod5C9E92A4": Object {
      "Properties": Object {
        "DeploymentId": Object {
          "Ref": "testapiDeployment356D2C355de403ccb8bbc92f1efba8f1137d2fbb",
        },
        "RestApiId": Object {
          "Ref": "testapiD6451F70",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "testapiregisterD37E6654": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "testapiD6451F70",
            "RootResourceId",
          ],
        },
        "PathPart": "register",
        "RestApiId": Object {
          "Ref": "testapiD6451F70",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testapiregisterPOST60A8BA5A": Object {
      "Properties": Object {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": "authorizer_id",
        "HttpMethod": "POST",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "CaRegisterApitestcaseCaRegistratorFunctiontestcaseB58B98CE",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "testapiregisterD37E6654",
        },
        "RestApiId": Object {
          "Ref": "testapiD6451F70",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testapiregisterPOSTApiPermissionTestteststacktestapi8A9875EAPOSTregisterDBD9D9DB": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "CaRegisterApitestcaseCaRegistratorFunctiontestcaseB58B98CE",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "testapiD6451F70",
              },
              "/test-invoke-stage/POST/register",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testapiregisterPOSTApiPermissionteststacktestapi8A9875EAPOSTregister34F9388F": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "CaRegisterApitestcaseCaRegistratorFunctiontestcaseB58B98CE",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "testapiD6451F70",
              },
              "/",
              Object {
                "Ref": "testapiDeploymentStageprod5C9E92A4",
              },
              "/POST/register",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
  },
}
`;
